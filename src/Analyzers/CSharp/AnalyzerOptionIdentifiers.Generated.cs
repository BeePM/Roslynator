// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;

namespace Roslynator.CSharp
{
    public static partial class AnalyzerOptionIdentifiers
    {
        public const string RemoveAccessibilityModifiers = "RCS1018i";
        public const string RemoveEmptyLineBetweenClosingBraceAndSwitchSection = "RCS1036a";
        public const string DoNotRenamePrivateStaticReadOnlyFieldToCamelCaseWithUnderscore = "RCS1045a";
        public const string RemoveArgumentListFromObjectCreation = "RCS1050i";
        public const string RemoveParenthesesFromConditionOfConditionalExpressionWhenExpressionIsSingleToken = "RCS1051a";
        public const string ConvertBitwiseOperationToHasFlagCall = "RCS1096i";
        public const string SimplifyConditionalExpressionWhenItIncludesNegationOfCondition = "RCS1104a";
        public const string ConvertMethodGroupToAnonymousFunction = "RCS1207i";
        public const string DoNotUseElementAccessWhenExpressionIsInvocation = "RCS1246a";
        public const string UseIsNullPatternInsteadOfInequalityOperator = "RCS1248a";
        public const string UseComparisonInsteadOfIsNullPattern = "RCS1248i";
    }
}